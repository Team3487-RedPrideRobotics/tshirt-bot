// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.Constants;
import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;
import edu.wpi.first.wpilibj.motorcontrol.Spark;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivetrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Spark RightDrive1;
private Spark LeftDrive1;
private DifferentialDrive driveMotorGroup;
private Spark RightDrive2;
private Spark LeftDrive2;
private MotorControllerGroup RightMotors;
private MotorControllerGroup LeftMotors;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
RightDrive1 = new Spark(0);
 addChild("RightDrive1",RightDrive1);
 RightDrive1.setInverted(false);
RightDrive2 = new Spark(1);
 addChild("RightDrive2",RightDrive2);
 RightDrive2.setInverted(false);

LeftDrive1 = new Spark(2);
 addChild("LeftDrive1",LeftDrive1);
 LeftDrive1.setInverted(true);
LeftDrive2 = new Spark (3);
 addChild("LeftDrive2",LeftDrive2);
 LeftDrive2.setInverted(true);

 RightMotors = new MotorControllerGroup(RightDrive1, RightDrive2);
 LeftMotors = new MotorControllerGroup(LeftDrive1, LeftDrive2);

driveMotorGroup = new DifferentialDrive(LeftMotors, RightMotors);
 addChild("DriveMotorGroup",driveMotorGroup);
 driveMotorGroup.setSafetyEnabled(true);
driveMotorGroup.setExpiration(0.1);
driveMotorGroup.setMaxOutput(1.0);



        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.


    public void tankDriveRaw(double leftSpeed, double rightSpeed){
        driveMotorGroup.tankDrive(Math.sqrt(Constants.DRIVE_SPEED) * leftSpeed, Math.sqrt(Constants.DRIVE_SPEED) * rightSpeed);
    }
}

